#include "servpipe.h"

int chat(char *login, char *buffer)
{
  int *fd;

  if (!(fd = recup_pipe(NULL)))
    return (-1);
  printf("ecriture de la part de :%s: message :%s:\n",login, buffer);
  write(fd[1], login, strlen(login));
  write(fd[1], "\0", 1);
  write(fd[1], buffer, strlen(buffer));
  write(fd[1], "\0", 1);
  return (0);
}

void start_chat()
{
  int *fd;
  t_conv *chat;
  char *buffer;
  char *login;

  login = NULL;
  buffer = NULL;
  printf("start_chat\n");
  chat = recup_chat(NULL);
    if (chat)
      printf("chat recup\n");
  fd = recup_pipe(NULL);
  int sizefd;
  while ((sizefd = size_fd(fd[0])))
    {
      printf("sizefd = %d\n", sizefd);
      if ((!(login = ft_fd_in_str(fd[0])))
	  || (!(buffer = ft_fd_in_str(fd[0]))))
	break;
      printf("lecture de la part de :%s: message :%s:\n",login, buffer);
      if ((chat = find_login(login, chat)))
	printf("chat trouver\n");
      else
	{
	  chat = creat_conv(login);
	  printf("chat creer\n");
	}
      maj_conv(chat, buffer);
      printf("chat->log :%s:\n", chat->login);
      printf("chat->conv :%s:\n", chat->conv[chat->cpt -1]);
      printf("?\n");
    }
  printf("sizefd = %d\n", sizefd);
  int i = 0;
  while (i <= chat->cpt)
    {
      printf("%s envoie %s\n\n\n\n", chat->login, chat->conv[i]);
      i++;
    }
  printf("exit\n");
  if (login)
    printf("login = :%s:\n", login);
  if (buffer)
    printf("buffer = :%s:\n", buffer);
}
